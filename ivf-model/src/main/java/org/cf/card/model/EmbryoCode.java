package org.cf.card.model;

import static javax.persistence.GenerationType.AUTO;

import java.util.ArrayList;

// Generated Sep 10, 2015 2:25:00 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.cf.card.util.EnumDayTable;
import org.cf.card.util.EnumDayTable.Option;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * EmbryoTreatment generated by hbm2java
 */
@Entity
@Table(name = "embryo_code")
public class EmbryoCode implements java.io.Serializable,Cloneable {

	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = AUTO)
	@Column(name = "id", unique = true, nullable = false)
	private Long id;

	// @JsonIgnore
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "embryo_id")
	private Embryo embryo;

	//@JsonIgnore
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "code_id")
	private Codes code;

	@Column(name = "_index")
	private int index;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_of_use", length = 19)
	private Date dateOfUse;

//	@Column(name = "destiny", length = 45)
//	private String destiny;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "destiny_date", length = 19)
	private Date destinyDate;

	@Column(name = "catheter")
	private String catheter;

	@Column(name = "type", columnDefinition = "int default 0")
	private int type;

	@Column(name = "time")
	private String time;
	
    @Column(name = "remark", columnDefinition="LONGTEXT", nullable=true)
    private String remark;
    
	@JsonIgnore
	@OneToMany(fetch = FetchType.EAGER,  mappedBy = "embryoCode", cascade = {CascadeType.REMOVE, CascadeType.REFRESH})
	private List<DayProgressValue> dayProgressValues = new ArrayList<>();

	@Transient
	private Option destiny;

	public EmbryoCode() {
	}

	public EmbryoCode(Embryo embryo, Codes code, int index, Date dateOfUse, Option destiny, Date destinyDate,
			Set<DayProgressValue> dayProgressValues) {
		this.embryo = embryo;
		this.code = code;
		this.index = index;
		this.dateOfUse = dateOfUse;
		this.destiny = destiny;
		this.destinyDate = destinyDate;
	}

	/**
	 * Instantiates a new embryo code with primary key
	 *
	 * @param embryoCodeId
	 *            the embryo code id
	 */
	public EmbryoCode(Long embryoCodeId) {
		this.id = embryoCodeId;
	}
	
	
	

	public String getRemark() {
		return remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Embryo getEmbryo() {
		return this.embryo;
	}

	public void setEmbryo(Embryo embryo) {
		this.embryo = embryo;
	}

	public Codes getCode() {
		return code;
	}

	public void setCode(Codes code) {
		this.code = code;
	}

	public int getIndex() {
		return index;
	}

	public void setIndex(int index) {
		this.index = index;
	}

	public Date getDateOfUse() {
		return this.dateOfUse;
	}

	public void setDateOfUse(Date dateOfUse) {
		this.dateOfUse = dateOfUse;
	}

//	public String getDestiny() {
//		return destiny;
//	}
//
//	public void setDestiny(String destiny) {
//		this.destiny = destiny;
//	}

	public Date getDestinyDate() {
		return this.destinyDate;
	}

	public void setDestinyDate(Date destinyDate) {
		this.destinyDate = destinyDate;
	}

	public String getCatheter() {
		return catheter;
	}

	public void setCatheter(String catheter) {
		this.catheter = catheter;
	}

	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	public String getTime() {
		return time;
	}

	public void setTime(String time) {
		this.time = time;
	}

	public List<DayProgressValue> getDayProgressValues() {
		return dayProgressValues;
	}

	public void setDayProgressValues(List<DayProgressValue> dayProgressValues) {
		this.dayProgressValues = dayProgressValues;
	}

	public Option getDestiny() {

		for (DayProgressValue dayProgressValue : getDayProgressValues()) {
			Option option = Option.getOptionByKey(dayProgressValue.getDayOptionId());
			if (EnumDayTable.getDestiny().contains(option)) {
				this.destiny = option;
				break;
			}
		}
		return destiny;
	}
	
	@Override
	public EmbryoCode clone() throws CloneNotSupportedException {
		return (EmbryoCode)super.clone();
	}
}
