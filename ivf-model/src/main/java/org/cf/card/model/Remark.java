package org.cf.card.model;

import static javax.persistence.GenerationType.AUTO;

// Generated Sep 10, 2015 2:25:00 PM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Remark generated by hbm2java
 */
@Entity
@Table(name = "remark")
public class Remark implements java.io.Serializable {

    private static final long serialVersionUID = 1L;
    
    @Id
    @GeneratedValue(strategy = AUTO)
    @Column(name = "id", unique = true, nullable = false)
    private Long id;


    @Column(name = "_type")
    private int type;

    @Column(name = "remark", columnDefinition="LONGTEXT")
    private String remark;
    
    @ManyToOne
	@JoinColumn(name = "code_id")	
	private Codes code;


    public Remark() {
    }

    public Remark(int type,
            String remark) {
        this.type = type;
        this.remark = remark;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }
    public int getType() {
        return this.type;
    }

    public void setType(int type) {
        this.type = type;
    }

    public String getRemark() {
        return this.remark;
    }

    public void setRemark(String remark) {
        this.remark = remark;
    }

	public Codes getCode() {
		return code;
	}

	public void setCode(Codes code) {
		this.code = code;
	}
    
    

	/*@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((remark == null) ? 0 : remark.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Remark other = (Remark) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (patientInvestigation == null) {
			if (other.patientInvestigation != null)
				return false;
		} else if (!patientInvestigation.equals(other.patientInvestigation))
			return false;
		if (remark == null) {
			if (other.remark != null)
				return false;
		} else if (!remark.equals(other.remark))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Remark [id=" + id + ", patientInvestigation=" + patientInvestigation + ", type=" + type + ", remark="
				+ remark + "]";
	}*/

    
}
